{"version":3,"file":"EXT_meshopt_compression-CmcdNvcQ.js","sources":["../../node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_meshopt_compression.js"],"sourcesContent":["import { ArrayItem, GLTFLoader } from \"../glTFLoader.js\";\nimport { MeshoptCompression } from \"@babylonjs/core/Meshes/Compression/meshoptCompression.js\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry.js\";\nconst NAME = \"EXT_meshopt_compression\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_meshopt_compression/README.md)\n *\n * This extension uses a WebAssembly decoder module from https://github.com/zeux/meshoptimizer/tree/master/js\n * @since 5.0.0\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class EXT_meshopt_compression {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this.enabled = loader.isExtensionUsed(NAME);\n        this._loader = loader;\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadBufferViewAsync(context, bufferView) {\n        return GLTFLoader.LoadExtensionAsync(context, bufferView, this.name, (extensionContext, extension) => {\n            const bufferViewMeshopt = bufferView;\n            if (bufferViewMeshopt._meshOptData) {\n                return bufferViewMeshopt._meshOptData;\n            }\n            const buffer = ArrayItem.Get(`${context}/buffer`, this._loader.gltf.buffers, extension.buffer);\n            bufferViewMeshopt._meshOptData = this._loader.loadBufferAsync(`/buffers/${buffer.index}`, buffer, extension.byteOffset || 0, extension.byteLength).then((buffer) => {\n                return MeshoptCompression.Default.decodeGltfBufferAsync(buffer, extension.count, extension.byteStride, extension.mode, extension.filter);\n            });\n            return bufferViewMeshopt._meshOptData;\n        });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new EXT_meshopt_compression(loader));\n//# sourceMappingURL=EXT_meshopt_compression.js.map"],"names":["NAME","EXT_meshopt_compression","loader","context","bufferView","GLTFLoader","extensionContext","extension","bufferViewMeshopt","buffer","ArrayItem","MeshoptCompression","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"oJAGA,MAAMA,EAAO,0BAQN,MAAMC,CAAwB,CAIjC,YAAYC,EAAQ,CAIhB,KAAK,KAAOF,EACZ,KAAK,QAAUE,EAAO,gBAAgBF,CAAI,EAC1C,KAAK,QAAUE,CACvB,CAEI,SAAU,CACN,KAAK,QAAU,IACvB,CAII,oBAAoBC,EAASC,EAAY,CACrC,OAAOC,EAAW,mBAAmBF,EAASC,EAAY,KAAK,KAAM,CAACE,EAAkBC,IAAc,CAClG,MAAMC,EAAoBJ,EAC1B,GAAII,EAAkB,aAClB,OAAOA,EAAkB,aAE7B,MAAMC,EAASC,EAAU,IAAI,GAAGP,CAAO,UAAW,KAAK,QAAQ,KAAK,QAASI,EAAU,MAAM,EAC7F,OAAAC,EAAkB,aAAe,KAAK,QAAQ,gBAAgB,YAAYC,EAAO,KAAK,GAAIA,EAAQF,EAAU,YAAc,EAAGA,EAAU,UAAU,EAAE,KAAME,GAC9IE,EAAmB,QAAQ,sBAAsBF,EAAQF,EAAU,MAAOA,EAAU,WAAYA,EAAU,KAAMA,EAAU,MAAM,CAC1I,EACMC,EAAkB,YACrC,CAAS,CACT,CACA,CACAI,EAAwBZ,CAAI,EAC5Ba,EAAsBb,EAAM,GAAOE,GAAW,IAAID,EAAwBC,CAAM,CAAC","x_google_ignoreList":[0]}